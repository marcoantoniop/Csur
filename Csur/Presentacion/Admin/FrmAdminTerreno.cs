using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Text;
using System.Windows.Forms;
using Csur.Negocio;
using  Csur.Presentacion;
using System.Data.Entity;
using Csur.Datos;

namespace Csur.Presentacion.Admin
{
    public partial class FrmAdminTerreno : FrmMaestro
    {
        private DBcsurEntities dbContext = new DBcsurEntities();
        private EntidadFASE entidadFase = new EntidadFASE();
        private EntidadMANZANO entidadManzano = new EntidadMANZANO();
        private EntidadLOTE entidadLote = new EntidadLOTE();
        private string mensajeError;
        public FrmAdminTerreno()
        {
            InitializeComponent();
            this.dbContext = new DBcsurEntities();
            /*
            dbContext.FASE.Load();
            dbContext.MANZANO.Load();
            dbContext.LOTE.Load();
            */
            xtraTabFase.PageVisible = false;
            xtraTabManzano.PageVisible = false;
            xtraTabLote.PageVisible = false;
            //Csur.Datos.DBcsurEntities dbContext = new Csur.Datos.DBcsurEntities();
            // Call the Load method to get the data for the given DbSet from the database.
            //dbContext.FASE.Load();
            this.dbContext.FASE.Load();
            // This line of code is generated by Data Source Configuration Wizard
            fASEBindingSource.DataSource = dbContext.FASE.Local.ToBindingList();


            // This line of code is generated by Data Source Configuration Wizard
            // Instantiate a new DBContext
            //Csur.Datos.DBcsurEntities dbContext = new Csur.Datos.DBcsurEntities();
            // Call the Load method to get the data for the given DbSet from the database.
            dbContext.MANZANO.Load();
            // This line of code is generated by Data Source Configuration Wizard
            mANZANOBindingSource.DataSource = dbContext.MANZANO.Local.ToBindingList();
            // This line of code is generated by Data Source Configuration Wizard
            // Instantiate a new DBContext
            //Csur.Datos.DBcsurEntities dbContext = new Csur.Datos.DBcsurEntities();
            // Call the Load method to get the data for the given DbSet from the database.
            dbContext.LOTE.Load();
            // This line of code is generated by Data Source Configuration Wizard
            lOTEBindingSource.DataSource = dbContext.LOTE.Local.ToBindingList();
        }

        /*******************************
         *
         * INICIALIZADORES
         *
         *******************************/
        #region Inicializadores



        #endregion

        /*******************************
         *
         * PROCESOS VARIOS
         *
         *******************************/
        #region ProcesosVarios
        /// <summary>
        /// Activa la página TabPage que se quiera y se puede validar la actual
        /// </summary>
        /// <param name="ActivarTabPage">fase</param>
        /// <param name="ValidarTabPage">fase</param>
        /// <returns>True/False</returns>
        private bool OrdenarTabPage(string ActivarTabPage, string ValidarTabPage = "")
        {
            bool resultado = true;
            switch (ActivarTabPage)
            {
                case "inicio":
                    xtraTabInicio.Visible = true;
                    xtraTabFase.Enabled = false;
                    break;
                case "fase":
                    xtraTabFase.PageVisible = true;
                    xtraTabManzano.PageVisible = false;
                    xtraTabLote.PageVisible = false;
                    xtraTabFase.Enabled = true;
                    xtraTabFase.Visible = true;
                    break;
                case "manzano":
                    xtraTabFase.PageVisible = false;
                    xtraTabManzano.PageVisible = true;
                    xtraTabLote.PageVisible = false;
                    xtraTabManzano.Visible = true;
                    break;
                case "lote":
                    xtraTabFase.PageVisible = false;
                    xtraTabManzano.PageVisible = false;
                    xtraTabLote.PageVisible = true;
                    xtraTabLote.Visible = true;
                    break;
            }
            return true;
        }

        private void ActivarBotones()
        {
            this.BtnNuevaFase.Enabled = true;
            this.BtnNuevoManzano.Enabled = true;
            this.BtnNuevoLote.Enabled = true;
            xtraTabFase.PageVisible = false;
            xtraTabManzano.PageVisible = false;
            xtraTabLote.PageVisible = false;
            this.gridControl1.Refresh();
        }
        private void DesactivarBotones()
        {
            this.BtnNuevaFase.Enabled = false;
            this.BtnNuevoManzano.Enabled = false;
            this.BtnNuevoLote.Enabled = false;
        }

        private bool VarlidarControlLote(EntidadLOTE entidadControl)
        {
            bool resultado = true;
            mensajeError = "";
            if (entidadControl.IdManzano == null)
            {
                mensajeError = "Manzano" + Environment.NewLine;
                resultado = false;
            }
            if (entidadControl.NombreLote == null)
            {
                mensajeError += "Nombre Lote" + Environment.NewLine;
                resultado = false;
            }
            if (entidadControl.Codigo == null)
            {
                mensajeError += "Código" + Environment.NewLine;
                resultado = false;
            }
            if (entidadControl.Estado == null)
            {
                mensajeError += "Estado: activo / inactivo" + Environment.NewLine;
                resultado = false;
            }

            return resultado;
        }

        #endregion
        /*******************************
         *
         * EVENTOS DE BOTONES
         *
         *******************************/

        #region EventosBotones
        private void BtnNuevaFase_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            this.OrdenarTabPage("fase");
            this.DesactivarBotones();
            
        }
        private void BtnNuevoManzano_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            this.OrdenarTabPage("manzano");
            this.DesactivarBotones();
        }

        private void BtnNuevoLote_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            this.OrdenarTabPage("lote");
            this.DesactivarBotones();
            lOTEBindingSource.AddNew();
            //this.dataLayoutControl1.DataSource = new EntidadLOTE();
        }

        private void BtnGuardarNuevaFase_Click(object sender, EventArgs e)
        {
            if (this.txtFase != null && this.cmbFase.Text != null)
            {
                entidadFase = new EntidadFASE();
                entidadFase.NombreFase = txtFase.Text;
                dbContext.FASE.Add(entidadFase);
                dbContext.SaveChanges();
                this.OrdenarTabPage("inicio");
                this.ActivarBotones();
                entidadFase = new EntidadFASE();
            }
            else
            {
                Mensajes.MensajeRapido("Necesita llenar el campo nombre de fase");
            }
        }

        private void BtnGuardarNuevoManzano_Click(object sender, EventArgs e)
        {
            if (txtManzano.Text != null)
            {
                entidadManzano = new EntidadMANZANO();
                entidadManzano.NumManzano = Convert.ToInt32(txtManzano.Text);
                entidadManzano.IdFase = Convert.ToInt32(cmbFase.EditValue.ToString());
                dbContext.MANZANO.Add(entidadManzano);
                dbContext.SaveChanges();
                this.OrdenarTabPage("inicio");
                this.ActivarBotones();
                entidadManzano = new EntidadMANZANO();
            }
            else
            {
                Mensajes.MensajeRapido("Necesita llenar algunos campos");
            }
        
        }

        private void BtnGuardarNuevoLote_Click(object sender, EventArgs e)
        {

            
            entidadLote = new EntidadLOTE();
            
            if (dataLayoutControl1.Validate())
            {
                entidadLote = (EntidadLOTE) lOTEBindingSource.Current;
                if (VarlidarControlLote(entidadLote))
                {
                    dbContext.LOTE.Add(entidadLote);
                    dbContext.SaveChanges();
                    this.OrdenarTabPage("inicio");
                    this.ActivarBotones();
                    entidadLote = new EntidadLOTE();
                }
                else
                {
                    Mensajes.MensajeSimple("Falta información", this.mensajeError, MessageBoxIcon.Stop);
                }
            }
            else
            {
                Mensajes.MensajeRapido("Faltan Datos");
            }

        }




        #endregion

        
    }
}
